{"ast":null,"code":"export function validateUrlEntry(data) {\n  for (let i = 0; i < data.length; i++) {\n    const {\n      originalUrl,\n      validity,\n      shortcode\n    } = data[i];\n    if (!originalUrl || !validity || !shortcode) {\n      return {\n        valid: false,\n        message: `All fields are required for entry ${i + 1}`\n      };\n    }\n    try {\n      new URL(originalUrl);\n    } catch {\n      return {\n        valid: false,\n        message: `Invalid URL at entry ${i + 1}`\n      };\n    }\n    if (isNaN(validity) || Number(validity) <= 0) {\n      return {\n        valid: false,\n        message: `Validity must be a positive number at entry ${i + 1}`\n      };\n    }\n    if (!/^[a-zA-Z0-9_-]{3,15}$/.test(shortcode)) {\n      return {\n        valid: false,\n        message: `Shortcode must be 3-15 characters (letters, numbers, _, -) at entry ${i + 1}`\n      };\n    }\n  }\n  return {\n    valid: true\n  };\n}","map":{"version":3,"names":["validateUrlEntry","data","i","length","originalUrl","validity","shortcode","valid","message","URL","isNaN","Number","test"],"sources":["C:/Users/yasav/OneDrive/Desktop (1)/Desktop/react/22STUCHH010322/frontend/src/utils/validation.js"],"sourcesContent":["export function validateUrlEntry(data) {\r\n  for (let i = 0; i < data.length; i++) {\r\n    const { originalUrl, validity, shortcode } = data[i];\r\n\r\n    if (!originalUrl || !validity || !shortcode) {\r\n      return {\r\n        valid: false,\r\n        message: `All fields are required for entry ${i + 1}`,\r\n      };\r\n    }\r\n\r\n    try {\r\n      new URL(originalUrl);\r\n    } catch {\r\n      return {\r\n        valid: false,\r\n        message: `Invalid URL at entry ${i + 1}`,\r\n      };\r\n    }\r\n\r\n    if (isNaN(validity) || Number(validity) <= 0) {\r\n      return {\r\n        valid: false,\r\n        message: `Validity must be a positive number at entry ${i + 1}`,\r\n      };\r\n    }\r\n\r\n    if (!/^[a-zA-Z0-9_-]{3,15}$/.test(shortcode)) {\r\n      return {\r\n        valid: false,\r\n        message: `Shortcode must be 3-15 characters (letters, numbers, _, -) at entry ${i + 1}`,\r\n      };\r\n    }\r\n  }\r\n\r\n  return { valid: true };\r\n}\r\n"],"mappings":"AAAA,OAAO,SAASA,gBAAgBA,CAACC,IAAI,EAAE;EACrC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,IAAI,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;IACpC,MAAM;MAAEE,WAAW;MAAEC,QAAQ;MAAEC;IAAU,CAAC,GAAGL,IAAI,CAACC,CAAC,CAAC;IAEpD,IAAI,CAACE,WAAW,IAAI,CAACC,QAAQ,IAAI,CAACC,SAAS,EAAE;MAC3C,OAAO;QACLC,KAAK,EAAE,KAAK;QACZC,OAAO,EAAE,qCAAqCN,CAAC,GAAG,CAAC;MACrD,CAAC;IACH;IAEA,IAAI;MACF,IAAIO,GAAG,CAACL,WAAW,CAAC;IACtB,CAAC,CAAC,MAAM;MACN,OAAO;QACLG,KAAK,EAAE,KAAK;QACZC,OAAO,EAAE,wBAAwBN,CAAC,GAAG,CAAC;MACxC,CAAC;IACH;IAEA,IAAIQ,KAAK,CAACL,QAAQ,CAAC,IAAIM,MAAM,CAACN,QAAQ,CAAC,IAAI,CAAC,EAAE;MAC5C,OAAO;QACLE,KAAK,EAAE,KAAK;QACZC,OAAO,EAAE,+CAA+CN,CAAC,GAAG,CAAC;MAC/D,CAAC;IACH;IAEA,IAAI,CAAC,uBAAuB,CAACU,IAAI,CAACN,SAAS,CAAC,EAAE;MAC5C,OAAO;QACLC,KAAK,EAAE,KAAK;QACZC,OAAO,EAAE,uEAAuEN,CAAC,GAAG,CAAC;MACvF,CAAC;IACH;EACF;EAEA,OAAO;IAAEK,KAAK,EAAE;EAAK,CAAC;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}